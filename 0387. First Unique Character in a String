public class Solution {
    public int FirstUniqChar(string s) {
        Dictionary<char, int> dictionary = new Dictionary<char, int>();
        
        for(int i = 0; i < s.Length; i++)
        {
            int repeating = 0;
            
            //if already meet
            if(!dictionary.ContainsKey(s[i]))
            {
                for(int j = i + 1; j < s.Length; j++)
                {
                    if(s[i] == s[j])
                    {
                        //found repeating, end j loop
                        repeating = 1;
                        j = s.Length;
                        dictionary.Add(s[i], i);
                    }
                }

                //if no repeating
                if(repeating == 0)
                {
                    return i;
                }
            }
        }
        
        return -1;
    }
}

public class Solution {
    public int FirstUniqChar(string s) {
        int[] dic = new int[26];
        
        for(int i = 0; i < s.Length; i++)
        {
            if(dic[s[i] - 'a'] == 0)
            {
                dic[s[i] - 'a'] = 1;
            }
            else
            {
                dic[s[i] - 'a'] += 1;
            }
        }
        
        for(int j = 0; j < s.Length; j++)
        {
            if(dic[s[j] - 'a'] == 1)
            {
                return j;
            }
        }
        
        return -1;
    }
}
