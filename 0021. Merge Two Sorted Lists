/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     public int val;
 *     public ListNode next;
 *     public ListNode(int val=0, ListNode next=null) {
 *         this.val = val;
 *         this.next = next;
 *     }
 * }
 */
public class Solution {
    public ListNode MergeTwoLists(ListNode list1, ListNode list2) {
        ListNode result = null;
        ListNode current = result;
        
        if(list1 == null && list2 == null)
        {
            return null;
        }
        else
        {
            if(list1 == null)
            {
                return list2;
            }
            if(list2 == null)
            {
                return list1;
            }
        }
        
        if(list1.val > list2.val)
        {
            result = list2;
            list2 = list2.next;
            current = result;
        }
        else
        {
            result = list1;
            list1 = list1.next;
            current = result;
        }
        
        while(list1 != null && list2 != null)
        {
            //Console.WriteLine("list1: " + list1.val + " list2: " + list2.val);
            
            if(list1.val > list2.val)
            {
                current.next = list2;
                list2 = list2.next;
                current = current.next;
            }
            else
            {
                current.next = list1;
                list1 = list1.next;
                current = current.next;
            }
                
            current.next = null;
        }
        
        if(list1 != null || list2 != null)
        {
            if(list1 != null)
            {
                //Console.WriteLine("list1: " + list1.val);
                current.next = list1;
                list1 = null;
            }
            if(list2 != null)
            {
                //Console.WriteLine("list2: " + list2.val);
                current.next = list2;
                list2 = null;
            }
        }
        
        return result;
    }
}
