/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     public int val;
 *     public ListNode next;
 *     public ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public bool HasCycle(ListNode head) {
        if(head == null)
        {
            return false;
        }
        
        ListNode current1 = head;
        ListNode current2 = head;
        
        while(current1.next != null && current2.next != null)
        {
            current1 = current1.next;
            current2 = current2.next;
            
            if(current2.next != null)
            {
                current2 = current2.next;
            }
            else
            {
                return false;
            }
            
            if(current1 == current2)
            {
                return true;
            }
        }
        
        return false;
    }
}
