/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
public class Solution {
    public int max = 0;
    
    public int DiameterOfBinaryTree(TreeNode root) {
        FindMax(root);
        
        return max;
    }
    
    public int FindMax(TreeNode root)
    {
        int leftCount = 0;
        int rightCount = 0;
        
        if(root == null)
        {
            return 0;
        }
        
        leftCount += FindMax(root.left);
        rightCount += FindMax(root.right);
        
        if(max < leftCount + rightCount)
        {
            max = leftCount + rightCount;
        }
        
        if(leftCount > rightCount)
        {
            return leftCount +1;
        }
        else
        {
            return rightCount +1;
        }
    }
}
