/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     public int val;
 *     public ListNode next;
 *     public ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode GetIntersectionNode(ListNode headA, ListNode headB) {
        int count = 0;

        ListNode current1 = headA;
        ListNode current2 = headB;
        
        while(count <= 2)
        {
            if(Object.ReferenceEquals(current1, current2))
            {
                return current1;
            }
            
            current1 = current1.next;
            current2 = current2.next;
            
            if(current1 == null)
            {
                current1 = headB;
                count++;
            }
            
            if(current2 == null)
            {
                current2 = headA;
                count++;
            }
        }
        return null;
    }
}
