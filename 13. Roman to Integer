public class Solution {
    public int RomanToInt(string s) {
        Dictionary<Char, int> romanNumeralSymbols = new Dictionary<Char, int>();
        
        romanNumeralSymbols.Add('I', 1);
        romanNumeralSymbols.Add('V', 5);
        romanNumeralSymbols.Add('X', 10);
        romanNumeralSymbols.Add('L', 50);
        romanNumeralSymbols.Add('C', 100);
        romanNumeralSymbols.Add('D', 500);
        romanNumeralSymbols.Add('M', 1000);
        
        int result = 0;
        
        char lastSymbol = s[0];
        
        for(int i = 0; i < s.Length; i++)
        {
                if(romanNumeralSymbols[lastSymbol] < romanNumeralSymbols[s[i]])
                {
                    result -= romanNumeralSymbols[lastSymbol] * 2;
                }
            
                result += romanNumeralSymbols[s[i]];
                
            lastSymbol = s[i];
        }
        
        return result;
    }
}
