/*
// Definition for a Node.
public class Node {
    public int val;
    public IList<Node> children;

    public Node() {}

    public Node(int _val) {
        val = _val;
    }

    public Node(int _val,IList<Node> _children) {
        val = _val;
        children = _children;
    }
}
*/

public class Solution {
    public void Helper(IList<int> result, Node node)
	{
		if (node != null)
		{
			result.Add(node.val);
			for (int i = 0; i < node.children.Count; i++)
			{
				Helper(result, node.children[i]);
			}
		}
	}

	public IList<int> Preorder(Node root)
	{
		IList<int> resultList = new List<int>();
		Helper(resultList, root);
		return resultList;
	}
}
